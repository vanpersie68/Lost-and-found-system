{"ast":null,"code":"import { getUserListData } from \"@/api/index\";\nimport departmentChoose from \"./department-choose\";\nexport default {\n  name: \"userChoose\",\n  components: {\n    departmentChoose\n  },\n  props: {\n    text: {\n      type: String,\n      default: \"Select Users\"\n    },\n    icon: {\n      type: String,\n      default: \"md-person-add\"\n    }\n  },\n  data() {\n    return {\n      userLoading: true,\n      userModalVisible: false,\n      selectUsers: [],\n      searchUserForm: {\n        id: \"\",\n        nickname: \"\",\n        type: \"\",\n        status: \"\",\n        pageNumber: 1,\n        // Current page number\n        pageSize: 10,\n        // Page size\n        sort: \"createTime\",\n        // Default sorting field\n        order: \"desc\" // Default sorting order\n      },\n\n      userColumns: [{\n        type: \"index\",\n        width: 60,\n        align: \"center\"\n      }, {\n        title: \"Username\",\n        key: \"nickname\",\n        minWidth: 130,\n        sortable: true\n      }, {\n        title: \"Login Account\",\n        key: \"username\",\n        minWidth: 130,\n        sortable: true\n      }, {\n        title: \"Avatar\",\n        key: \"avatar\",\n        width: 80,\n        align: \"center\",\n        render: (h, params) => {\n          return h(\"Avatar\", {\n            props: {\n              src: params.row.avatar\n            }\n          });\n        }\n      }, {\n        title: \"Department\",\n        key: \"departmentTitle\",\n        width: 120\n      }, {\n        title: \"Mobile\",\n        key: \"mobile\",\n        width: 125,\n        sortable: true\n      }, {\n        title: \"Email\",\n        key: \"email\",\n        width: 180,\n        sortable: true\n      }, {\n        title: \"Gender\",\n        key: \"sex\",\n        width: 70,\n        align: \"center\"\n      }, {\n        title: \"Creation Time\",\n        key: \"createTime\",\n        sortable: true,\n        sortType: \"desc\",\n        width: 170\n      }, {\n        title: \"Action\",\n        key: \"action\",\n        width: 130,\n        align: \"center\",\n        fixed: \"right\",\n        render: (h, params) => {\n          return h(\"div\", [h(\"Button\", {\n            props: {\n              type: \"info\",\n              size: \"small\"\n            },\n            on: {\n              click: () => {\n                this.chooseUser(params.row);\n              }\n            }\n          }, \"Add User\")]);\n        }\n      }],\n      userData: [],\n      totalUser: 0\n    };\n  },\n  methods: {\n    handleSelectDep(v) {\n      this.searchUserForm.departmentId = v;\n    },\n    changeUserPage(v) {\n      this.searchUserForm.pageNumber = v;\n      this.getUserDataList();\n    },\n    changeUserPageSize(v) {\n      this.searchUserForm.pageSize = v;\n      this.getUserDataList();\n    },\n    getUserDataList() {\n      this.userLoading = true;\n      getUserListData(this.searchUserForm).then(res => {\n        this.userLoading = false;\n        if (res.success) {\n          this.userData = res.result.records;\n          this.totalUser = res.result.total;\n        }\n      });\n    },\n    handleSearchUser() {\n      this.searchUserForm.pageNumber = 1;\n      this.searchUserForm.pageSize = 10;\n      this.getUserDataList();\n    },\n    handleResetUser() {\n      this.$refs.searchUserForm.resetFields();\n      this.searchUserForm.pageNumber = 1;\n      this.searchUserForm.pageSize = 10;\n      this.$refs.dep.clearSelect();\n      this.searchUserForm.departmentId = \"\";\n      // Reload data\n      this.getUserDataList();\n    },\n    setData(v) {\n      this.selectUsers = v;\n      this.$emit(\"on-change\", this.selectUsers);\n    },\n    chooseUser(v) {\n      // Check for duplicates\n      let that = this;\n      let flag = true;\n      this.selectUsers.forEach(e => {\n        if (v.id == e.id) {\n          that.$Message.warning(\"Already added, please do not select again\");\n          flag = false;\n        }\n      });\n      if (flag) {\n        let u = {\n          id: v.id,\n          username: v.username,\n          nickname: v.nickname\n        };\n        this.selectUsers.push(u);\n        this.$emit(\"on-change\", this.selectUsers);\n        this.$Message.success(`Added user ${v.nickname} successfully`);\n      }\n    },\n    clearSelectData() {\n      this.selectUsers = [];\n      this.$emit(\"on-change\", this.selectUsers);\n    },\n    handleCancelUser(e, id) {\n      // Remove the selected user\n      this.selectUsers = this.selectUsers.filter(e => {\n        return e.id != id;\n      });\n      this.$emit(\"on-change\", this.selectUsers);\n      this.$Message.success(\"Deleted selected user successfully\");\n    }\n  },\n  mounted() {\n    this.getUserDataList();\n  }\n};","map":{"version":3,"names":["getUserListData","departmentChoose","name","components","props","text","type","String","default","icon","data","userLoading","userModalVisible","selectUsers","searchUserForm","id","nickname","status","pageNumber","pageSize","sort","order","userColumns","width","align","title","key","minWidth","sortable","render","h","params","src","row","avatar","sortType","fixed","size","on","click","chooseUser","userData","totalUser","methods","handleSelectDep","v","departmentId","changeUserPage","getUserDataList","changeUserPageSize","then","res","success","result","records","total","handleSearchUser","handleResetUser","$refs","resetFields","dep","clearSelect","setData","$emit","that","flag","forEach","e","$Message","warning","u","username","push","clearSelectData","handleCancelUser","filter","mounted"],"sources":["src/views/template/user-choose.vue"],"sourcesContent":["<template>\n    <div class=\"user-choose\">\n      <Button @click=\"userModalVisible=true\" :icon=\"icon\">{{ text }}</Button>\n      <span @click=\"clearSelectData\" class=\"clear\">Clear Selection</span>\n      <Collapse simple class=\"collapse\">\n        <Panel name=\"1\">\n          Selected\n          <span class=\"select-count\">{{ selectUsers.length }}</span> people\n          <p slot=\"content\">\n            <Tag v-for=\"(item, i) in selectUsers\" :key=\"i\" :name=\"item.id\" color=\"default\" closable @on-close=\"handleCancelUser\">\n              <Tooltip placement=\"top\" :content=\"item.username\">{{ item.nickname }}</Tooltip>\n            </Tag>\n          </p>\n        </Panel>\n      </Collapse>\n      <Drawer title=\"Select Users\" closable v-model=\"userModalVisible\" width=\"800\" draggable>\n        <Form ref=\"searchUserForm\" :model=\"searchUserForm\" inline :label-width=\"55\">\n          <Form-item label=\"Username\" prop=\"nickname\">\n            <Input type=\"text\" v-model=\"searchUserForm.nickname\" clearable placeholder=\"Enter username\" style=\"width: 200px\" />\n          </Form-item>\n          <Form-item label=\"Department\" prop=\"department\">\n            <department-choose @on-change=\"handleSelectDep\" style=\"width: 200px\" ref=\"dep\"></department-choose>\n          </Form-item>\n          <Form-item style=\"margin-left:-35px;\" class=\"br\">\n            <Button @click=\"handleSearchUser\" type=\"primary\" icon=\"ios-search\">Search</Button>\n            <Button @click=\"handleResetUser\">Reset</Button>\n          </Form-item>\n        </Form>\n        <Alert show-icon>\n          Selected\n          <span class=\"select-count\">{{ selectUsers.length }}</span> items\n          <a style=\"margin-left: 10px;\" @click=\"clearSelectData\">Clear Selection</a>\n        </Alert>\n        <Table :loading=\"userLoading\" border :columns=\"userColumns\" :data=\"userData\" style=\"margin: 2vh 0;\"></Table>\n        <Row type=\"flex\" justify=\"end\">\n          <Page :current=\"searchUserForm.pageNumber\" :total=\"totalUser\" :page-size=\"searchUserForm.pageSize\" @on-change=\"changeUserPage\" @on-page-size-change=\"changeUserPageSize\" :page-size-opts=\"[10,20,50]\" size=\"small\" show-total show-elevator show-sizer transfer></Page>\n        </Row>\n      </Drawer>\n    </div>\n  </template>\n  \n  <script>\n  import {\n    getUserListData\n  } from \"@/api/index\";\n  import departmentChoose from \"./department-choose\";\n  \n  export default {\n    name: \"userChoose\",\n    components: {\n      departmentChoose\n    },\n    props: {\n      text: {\n        type: String,\n        default: \"Select Users\"\n      },\n      icon: {\n        type: String,\n        default: \"md-person-add\"\n      }\n    },\n    data() {\n      return {\n        userLoading: true,\n        userModalVisible: false,\n        selectUsers: [],\n        searchUserForm: {\n          id: \"\",\n          nickname: \"\",\n          type: \"\",\n          status: \"\",\n          pageNumber: 1, // Current page number\n          pageSize: 10, // Page size\n          sort: \"createTime\", // Default sorting field\n          order: \"desc\" // Default sorting order\n        },\n        userColumns: [{\n            type: \"index\",\n            width: 60,\n            align: \"center\"\n          },\n          {\n            title: \"Username\",\n            key: \"nickname\",\n            minWidth: 130,\n            sortable: true\n          },\n          {\n            title: \"Login Account\",\n            key: \"username\",\n            minWidth: 130,\n            sortable: true\n          },\n          {\n            title: \"Avatar\",\n            key: \"avatar\",\n            width: 80,\n            align: \"center\",\n            render: (h, params) => {\n              return h(\"Avatar\", {\n                props: {\n                  src: params.row.avatar\n                }\n              });\n            }\n          },\n          {\n            title: \"Department\",\n            key: \"departmentTitle\",\n            width: 120\n          },\n          {\n            title: \"Mobile\",\n            key: \"mobile\",\n            width: 125,\n            sortable: true\n          },\n          {\n            title: \"Email\",\n            key: \"email\",\n            width: 180,\n            sortable: true\n          },\n          {\n            title: \"Gender\",\n            key: \"sex\",\n            width: 70,\n            align: \"center\"\n          },\n          {\n            title: \"Creation Time\",\n            key: \"createTime\",\n            sortable: true,\n            sortType: \"desc\",\n            width: 170\n          },\n          {\n            title: \"Action\",\n            key: \"action\",\n            width: 130,\n            align: \"center\",\n            fixed: \"right\",\n            render: (h, params) => {\n              return h(\"div\", [\n                h(\n                  \"Button\", {\n                    props: {\n                      type: \"info\",\n                      size: \"small\"\n                    },\n                    on: {\n                      click: () => {\n                        this.chooseUser(params.row);\n                      }\n                    }\n                  },\n                  \"Add User\"\n                )\n              ]);\n            }\n          }\n        ],\n        userData: [],\n        totalUser: 0\n      };\n    },\n    methods: {\n      handleSelectDep(v) {\n        this.searchUserForm.departmentId = v;\n      },\n      changeUserPage(v) {\n        this.searchUserForm.pageNumber = v;\n        this.getUserDataList();\n      },\n      changeUserPageSize(v) {\n        this.searchUserForm.pageSize = v;\n        this.getUserDataList();\n      },\n      getUserDataList() {\n        this.userLoading = true;\n        getUserListData(this.searchUserForm).then(res => {\n          this.userLoading = false;\n          if (res.success) {\n            this.userData = res.result.records;\n            this.totalUser = res.result.total;\n          }\n        });\n      },\n      handleSearchUser() {\n        this.searchUserForm.pageNumber = 1;\n        this.searchUserForm.pageSize = 10;\n        this.getUserDataList();\n      },\n      handleResetUser() {\n        this.$refs.searchUserForm.resetFields();\n        this.searchUserForm.pageNumber = 1;\n        this.searchUserForm.pageSize = 10;\n        this.$refs.dep.clearSelect();\n        this.searchUserForm.departmentId = \"\";\n        // Reload data\n        this.getUserDataList();\n      },\n      setData(v) {\n        this.selectUsers = v;\n        this.$emit(\"on-change\", this.selectUsers);\n      },\n      chooseUser(v) {\n        // Check for duplicates\n        let that = this;\n        let flag = true;\n        this.selectUsers.forEach(e => {\n          if (v.id == e.id) {\n            that.$Message.warning(\"Already added, please do not select again\");\n            flag = false;\n          }\n        });\n        if (flag) {\n          let u = {\n            id: v.id,\n            username: v.username,\n            nickname: v.nickname\n          };\n          this.selectUsers.push(u);\n          this.$emit(\"on-change\", this.selectUsers);\n          this.$Message.success(`Added user ${v.nickname} successfully`);\n        }\n      },\n      clearSelectData() {\n        this.selectUsers = [];\n        this.$emit(\"on-change\", this.selectUsers);\n      },\n      handleCancelUser(e, id) {\n        // Remove the selected user\n        this.selectUsers = this.selectUsers.filter(e => {\n          return e.id != id;\n        });\n        this.$emit(\"on-change\", this.selectUsers);\n        this.$Message.success(\"Deleted selected user successfully\");\n      }\n    },\n    mounted() {\n      this.getUserDataList();\n    }\n  };\n  </script>\n  \n  <style lang=\"less\">\n  .user-choose {\n    .clear {\n      font-size: 12px;\n      margin-left: 15px;\n      color: #40a9ff;\n      cursor: pointer;\n    }\n  \n    .collapse {\n      font-size: 12px;\n      margin-top: 15px;\n      width: 500px;\n    }\n  \n    .select-count {\n      font-weight: 600;\n      color: #40a9ff;\n    }\n  }\n  </style>\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}