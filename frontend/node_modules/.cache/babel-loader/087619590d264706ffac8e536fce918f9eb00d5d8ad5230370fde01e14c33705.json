{"ast":null,"code":"import { getAllRoleList, addUser, editUser } from \"./api.js\";\nimport { validateUsername, validateMobile, validatePassword } from \"@/libs/validate\";\nimport departmentTreeChoose from \"@/views/template/department-tree-choose\";\nimport uploadPicInput from \"@/views/template/upload-pic-input\";\nimport SetPassword from \"@/views/template/set-password\";\nimport dict from \"@/views/template/dict\";\nexport default {\n  name: \"user\",\n  components: {\n    departmentTreeChoose,\n    uploadPicInput,\n    SetPassword,\n    dict\n  },\n  props: {\n    value: {\n      type: Boolean,\n      default: false\n    },\n    data: {\n      type: Object\n    },\n    type: {\n      type: String,\n      default: \"0\"\n    }\n  },\n  data() {\n    return {\n      visible: this.value,\n      title: \"\",\n      passColor: \"\",\n      submitLoading: false,\n      form: {\n        addressArray: []\n      },\n      formValidate: {\n        username: [{\n          required: true,\n          message: \"Please enter login account\",\n          trigger: \"blur\"\n        }, {\n          validator: validateUsername,\n          trigger: \"blur\"\n        }],\n        nickname: [{\n          required: true,\n          message: \"Please enter username\",\n          trigger: \"blur\"\n        }],\n        mobile: [{\n          required: true,\n          message: \"Please enter mobile number\",\n          trigger: \"blur\"\n        }, {\n          validator: validateMobile,\n          trigger: \"blur\"\n        }],\n        password: [{\n          required: true,\n          message: \"Please enter password\",\n          trigger: \"blur\"\n        }, {\n          validator: validatePassword,\n          trigger: \"blur\"\n        }],\n        email: [{\n          required: true,\n          message: \"Please enter email address\"\n        }, {\n          type: \"email\",\n          message: \"Invalid email format\"\n        }]\n      },\n      roleList: []\n    };\n  },\n  methods: {\n    init() {\n      this.getRoleList();\n    },\n    getRoleList() {\n      getAllRoleList().then(res => {\n        if (res.success) {\n          this.roleList = res.result;\n        }\n      });\n    },\n    handleSelectDepTree(v) {\n      this.form.departmentId = v;\n    },\n    changeAddress(v) {\n      this.form.address = JSON.stringify(this.form.addressArray);\n    },\n    changePass(v, grade, strength) {\n      this.form.passStrength = strength;\n    },\n    submit() {\n      this.$refs.form.validate(valid => {\n        if (valid) {\n          if (this.type == \"1\") {\n            this.submitLoading = true;\n            editUser(this.form).then(res => {\n              this.submitLoading = false;\n              if (res.success) {\n                this.$Message.success(\"Operation successful\");\n                this.$emit(\"on-submit\", true);\n                this.visible = false;\n              }\n            });\n          } else {\n            this.submitLoading = true;\n            addUser(this.form).then(res => {\n              this.submitLoading = false;\n              if (res.success) {\n                this.$Message.success(\"Operation successful\");\n                this.$emit(\"on-submit\", true);\n                this.visible = false;\n              }\n            });\n          }\n        }\n      });\n    },\n    setCurrentValue(value) {\n      if (value === this.visible) {\n        return;\n      }\n      if (this.type == \"1\") {\n        this.title = \"Edit\";\n      } else if (this.type == \"2\") {\n        this.title = \"Add\";\n      } else {\n        this.title = \"Details\";\n      }\n      this.$refs.form.resetFields();\n      if (this.type == \"0\" || this.type == \"1\") {\n        // Echo data\n        let data = this.data;\n        // Address\n        if (data.address) {\n          data.addressArray = JSON.parse(data.address);\n        } else {\n          data.addressArray = [];\n        }\n        // Department\n        this.$refs.depTree.setData(data.departmentId, data.departmentTitle);\n        // Roles\n        let selectRolesId = [];\n        data.roles.forEach(function (e) {\n          selectRolesId.push(e.id);\n        });\n        data.roleIds = selectRolesId;\n        delete data.roles;\n        delete data.permissions;\n        // Password strength\n        if (data.passStrength == \"Weak\") {\n          this.passColor = \"#ed3f14\";\n        } else if (data.passStrength == \"Medium\") {\n          this.passColor = \"#faad14\";\n        } else if (data.passStrength == \"Strong\") {\n          this.passColor = \"#52c41a\";\n        }\n        // Echo\n        this.form = data;\n      } else {\n        // Add\n        this.$refs.depTree.setData(\"\", \"\");\n        this.form = {\n          type: 0,\n          sex: \"\",\n          addressArray: []\n        };\n      }\n      this.visible = value;\n    }\n  },\n  watch: {\n    value(val) {\n      this.setCurrentValue(val);\n    },\n    visible(value) {\n      this.$emit(\"input\", value);\n    }\n  },\n  mounted() {\n    this.init();\n  }\n};","map":{"version":3,"names":["getAllRoleList","addUser","editUser","validateUsername","validateMobile","validatePassword","departmentTreeChoose","uploadPicInput","SetPassword","dict","name","components","props","value","type","Boolean","default","data","Object","String","visible","title","passColor","submitLoading","form","addressArray","formValidate","username","required","message","trigger","validator","nickname","mobile","password","email","roleList","methods","init","getRoleList","then","res","success","result","handleSelectDepTree","v","departmentId","changeAddress","address","JSON","stringify","changePass","grade","strength","passStrength","submit","$refs","validate","valid","$Message","$emit","setCurrentValue","resetFields","parse","depTree","setData","departmentTitle","selectRolesId","roles","forEach","e","push","id","roleIds","permissions","sex","watch","val","mounted"],"sources":["src/views/roster/user/addEdit.vue"],"sourcesContent":["<template>\n    <div class=\"user-edit\">\n      <Modal :title=\"title\" v-model=\"visible\" width=\"90\" draggable :mask-closable=\"type=='0'\" ok-text=\"Submit\" @on-ok=\"submit\">\n        <Row :gutter=\"16\" justify=\"center\">\n          <div class=\"info-title\">\n            <span v-show=\"type!='2'\">Login Account {{ form.username }} (Unique Identifier {{ form.id }}) </span>\n            <Icon v-show=\"form.status==-1\" type=\"md-lock\" size=\"18\" style=\"margin-left:10px;cursor:pointer\" />\n          </div>\n        </Row>\n        <Form ref=\"form\" :model=\"form\" :rules=\"formValidate\" label-position=\"top\">\n          <Row :gutter=\"16\" v-if=\"type=='2'\">\n            <Col span=\"12\">\n              <FormItem label=\"Login Account\" prop=\"username\" style=\"width:100%\">\n                <Input v-model=\"form.username\" autocomplete=\"off\" :maxlength=\"16\" />\n              </FormItem>\n            </Col>\n            <Col span=\"12\">\n              <FormItem label=\"Password\" prop=\"password\" style=\"width:100%\">\n                <SetPassword v-model=\"form.password\" @on-change=\"changePass\" />\n              </FormItem>\n            </Col>\n          </Row>\n          <Row :gutter=\"16\">\n            <Col span=\"12\">\n              <FormItem label=\"Username\" prop=\"nickname\" style=\"width:100%\">\n                <Input v-model=\"form.nickname\" />\n              </FormItem>\n            </Col>\n            <Col span=\"12\">\n              <FormItem label=\"Email\" prop=\"email\" style=\"width:100%\">\n                <Input v-model=\"form.email\" />\n              </FormItem>\n            </Col>\n          </Row>\n          <Row :gutter=\"16\">\n            <Col span=\"12\">\n              <FormItem label=\"Mobile Number\" prop=\"mobile\" style=\"width:100%\">\n                <Input v-model=\"form.mobile\" />\n              </FormItem>\n            </Col>\n            <Col span=\"12\">\n              <FormItem label=\"Gender\" style=\"width:100%\">\n                <dict dict=\"sex\" v-model=\"form.sex\" transfer clearable placeholder=\"Select Gender\" />\n              </FormItem>\n            </Col>\n          </Row>\n          <Row :gutter=\"16\">\n            <Col span=\"12\">\n              <FormItem label=\"Department\" style=\"width:100%\">\n                <department-tree-choose @on-change=\"handleSelectDepTree\" ref=\"depTree\"></department-tree-choose>\n              </FormItem>\n            </Col>\n            <Col span=\"12\">\n              <FormItem label=\"User Type\" style=\"width:100%\">\n                <Select v-model=\"form.type\" placeholder=\"Select User Type\">\n                  <Option :value=\"0\">Regular User</Option>\n                  <Option :value=\"1\">Administrator</Option>\n                </Select>\n              </FormItem>\n            </Col>\n          </Row>\n          <Row :gutter=\"16\">\n            <Col span=\"12\">\n              <FormItem label=\"Avatar\" style=\"width:100%\">\n                <upload-pic-input v-model=\"form.avatar\"></upload-pic-input>\n              </FormItem>\n            </Col>\n            <Col span=\"12\">\n              <FormItem label=\"Role\" prop=\"roleIds\" style=\"width:100%\">\n                <Select v-model=\"form.roleIds\" multiple>\n                  <Option v-for=\"item in roleList\" :value=\"item.id\" :key=\"item.id\" :label=\"item.name\">\n                    <span style=\"margin-right:10px;\">{{ item.name }}</span>\n                    <span style=\"color:#ccc;\">{{ item.description }}</span>\n                  </Option>\n                </Select>\n              </FormItem>\n            </Col>\n          </Row>\n        </Form>\n      </Modal>\n    </div>\n  </template>\n  \n  <script>\n  import {\n    getAllRoleList,\n    addUser,\n    editUser\n  } from \"./api.js\";\n  import {\n    validateUsername,\n    validateMobile,\n    validatePassword\n  } from \"@/libs/validate\";\n  import departmentTreeChoose from \"@/views/template/department-tree-choose\";\n  import uploadPicInput from \"@/views/template/upload-pic-input\";\n  import SetPassword from \"@/views/template/set-password\";\n  import dict from \"@/views/template/dict\";\n  export default {\n    name: \"user\",\n    components: {\n      departmentTreeChoose,\n      uploadPicInput,\n      SetPassword,\n      dict\n    },\n    props: {\n      value: {\n        type: Boolean,\n        default: false\n      },\n      data: {\n        type: Object\n      },\n      type: {\n        type: String,\n        default: \"0\"\n      }\n    },\n    data() {\n      return {\n        visible: this.value,\n        title: \"\",\n        passColor: \"\",\n        submitLoading: false,\n        form: {\n          addressArray: []\n        },\n        formValidate: {\n          username: [{\n              required: true,\n              message: \"Please enter login account\",\n              trigger: \"blur\"\n            },\n            {\n              validator: validateUsername,\n              trigger: \"blur\"\n            }\n          ],\n          nickname: [{\n            required: true,\n            message: \"Please enter username\",\n            trigger: \"blur\"\n          }],\n          mobile: [{\n              required: true,\n              message: \"Please enter mobile number\",\n              trigger: \"blur\"\n            },\n            {\n              validator: validateMobile,\n              trigger: \"blur\"\n            }\n          ],\n          password: [{\n              required: true,\n              message: \"Please enter password\",\n              trigger: \"blur\"\n            },\n            {\n              validator: validatePassword,\n              trigger: \"blur\"\n            }\n          ],\n          email: [{\n              required: true,\n              message: \"Please enter email address\"\n            },\n            {\n              type: \"email\",\n              message: \"Invalid email format\"\n            }\n          ]\n        },\n        roleList: []\n      };\n    },\n    methods: {\n      init() {\n        this.getRoleList();\n      },\n      getRoleList() {\n        getAllRoleList().then(res => {\n          if (res.success) {\n            this.roleList = res.result;\n          }\n        });\n      },\n      handleSelectDepTree(v) {\n        this.form.departmentId = v;\n      },\n      changeAddress(v) {\n        this.form.address = JSON.stringify(this.form.addressArray);\n      },\n      changePass(v, grade, strength) {\n        this.form.passStrength = strength;\n      },\n      submit() {\n        this.$refs.form.validate(valid => {\n          if (valid) {\n            if (this.type == \"1\") {\n              this.submitLoading = true;\n              editUser(this.form).then(res => {\n                this.submitLoading = false;\n                if (res.success) {\n                  this.$Message.success(\"Operation successful\");\n                  this.$emit(\"on-submit\", true);\n                  this.visible = false;\n                }\n              });\n            } else {\n              this.submitLoading = true;\n              addUser(this.form).then(res => {\n                this.submitLoading = false;\n                if (res.success) {\n                  this.$Message.success(\"Operation successful\");\n                  this.$emit(\"on-submit\", true);\n                  this.visible = false;\n                }\n              });\n            }\n          }\n        });\n      },\n      setCurrentValue(value) {\n        if (value === this.visible) {\n          return;\n        }\n        if (this.type == \"1\") {\n          this.title = \"Edit\";\n        } else if (this.type == \"2\") {\n          this.title = \"Add\";\n        } else {\n          this.title = \"Details\";\n        }\n        this.$refs.form.resetFields();\n        if (this.type == \"0\" || this.type == \"1\") {\n          // Echo data\n          let data = this.data;\n          // Address\n          if (data.address) {\n            data.addressArray = JSON.parse(data.address);\n          } else {\n            data.addressArray = [];\n          }\n          // Department\n          this.$refs.depTree.setData(data.departmentId, data.departmentTitle);\n          // Roles\n          let selectRolesId = [];\n          data.roles.forEach(function(e) {\n            selectRolesId.push(e.id);\n          });\n          data.roleIds = selectRolesId;\n          delete data.roles;\n          delete data.permissions;\n          // Password strength\n          if (data.passStrength == \"Weak\") {\n            this.passColor = \"#ed3f14\";\n          } else if (data.passStrength == \"Medium\") {\n            this.passColor = \"#faad14\";\n          } else if (data.passStrength == \"Strong\") {\n            this.passColor = \"#52c41a\";\n          }\n          // Echo\n          this.form = data;\n        } else {\n          // Add\n          this.$refs.depTree.setData(\"\", \"\");\n          this.form = {\n            type: 0,\n            sex: \"\",\n            addressArray: []\n          };\n        }\n        this.visible = value;\n      }\n    },\n    watch: {\n      value(val) {\n        this.setCurrentValue(val);\n      },\n      visible(value) {\n        this.$emit(\"input\", value);\n      }\n    },\n    mounted() {\n      this.init();\n    }\n  };\n  </script>\n  \n  <style lang=\"less\">\n  \n  </style>\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}