{"ast":null,"code":"import { initDepartment, loadDepartment, searchDepartment } from \"@/api/index\";\nexport default {\n  name: \"departmentTreeChoose\",\n  props: {\n    multiple: {\n      type: Boolean,\n      default: false\n    },\n    clearable: {\n      type: Boolean,\n      default: true\n    },\n    placeholder: {\n      type: String,\n      default: \"Click to select a department\"\n    }\n  },\n  data() {\n    return {\n      depLoading: false,\n      departmentTitle: \"\",\n      searchKey: \"\",\n      dataDep: [],\n      selectDep: [],\n      departmentId: []\n    };\n  },\n  methods: {\n    initDepartmentData() {\n      initDepartment().then(res => {\n        if (res.success) {\n          res.result.forEach(function (e) {\n            if (e.isParent) {\n              e.loading = false;\n              e.children = [];\n            }\n            if (e.status == -1) {\n              e.title = \"[Disabled] \" + e.title;\n              e.disabled = true;\n            }\n          });\n          this.dataDep = res.result;\n        }\n      });\n    },\n    loadData(item, callback) {\n      loadDepartment({\n        parentId: item.id\n      }).then(res => {\n        if (res.success) {\n          res.result.forEach(function (e) {\n            if (e.isParent) {\n              e.loading = false;\n              e.children = [];\n            }\n            if (e.status == -1) {\n              e.title = \"[Disabled] \" + e.title;\n              e.disabled = true;\n            }\n          });\n          callback(res.result);\n        }\n      });\n    },\n    searchDep() {\n      // Search for departments\n      if (this.searchKey) {\n        this.depLoading = true;\n        searchDepartment({\n          title: this.searchKey\n        }).then(res => {\n          this.depLoading = false;\n          if (res.success) {\n            res.result.forEach(function (e) {\n              if (e.status == -1) {\n                e.title = \"[Disabled] \" + e.title;\n                e.disabled = true;\n              }\n            });\n            this.dataDep = res.result;\n          }\n        });\n      } else {\n        this.initDepartmentData();\n      }\n    },\n    selectTree(v) {\n      let ids = [],\n        title = \"\";\n      v.forEach(e => {\n        ids.push(e.id);\n        if (title == \"\") {\n          title = e.title;\n        } else {\n          title = title + \"、\" + e.title;\n        }\n      });\n      this.departmentId = ids;\n      this.departmentTitle = title;\n      if (this.multiple) {\n        this.$emit(\"on-change\", this.departmentId);\n      } else {\n        this.$emit(\"on-change\", this.departmentId[0]);\n      }\n    },\n    clearSelect() {\n      this.departmentId = [];\n      this.departmentTitle = \"\";\n      this.initDepartmentData();\n      if (this.multiple) {\n        this.$emit(\"on-change\", []);\n      } else {\n        this.$emit(\"on-change\", \"\");\n      }\n      this.$emit(\"on-clear\");\n    },\n    setData(ids, title) {\n      this.departmentTitle = title;\n      if (this.multiple) {\n        this.departmentId = ids;\n      } else {\n        this.departmentId = [];\n        this.departmentId.push(ids);\n      }\n      this.$emit(\"on-change\", this.departmentId);\n    }\n  },\n  mounted() {\n    this.initDepartmentData();\n  }\n};","map":{"version":3,"names":["initDepartment","loadDepartment","searchDepartment","name","props","multiple","type","Boolean","default","clearable","placeholder","String","data","depLoading","departmentTitle","searchKey","dataDep","selectDep","departmentId","methods","initDepartmentData","then","res","success","result","forEach","e","isParent","loading","children","status","title","disabled","loadData","item","callback","parentId","id","searchDep","selectTree","v","ids","push","$emit","clearSelect","setData","mounted"],"sources":["src/views/template/department-tree-choose.vue"],"sourcesContent":["<template>\n    <div>\n        <div style=\"display:flex;\">\n            <Input v-model=\"departmentTitle\" readonly style=\"margin-right:10px;\" :placeholder=\"placeholder\" :clearable=\"clearable\" @on-clear=\"clearSelect\" />\n            <Poptip transfer trigger=\"click\" placement=\"right\" title=\"Select Department\" width=\"250\">\n                <Button icon=\"md-list\">Select Department</Button>\n                <div slot=\"content\">\n                    <Input v-model=\"searchKey\" suffix=\"ios-search\" @on-change=\"searchDep\" placeholder=\"Search by department name\" clearable />\n                    <div class=\"dep-tree-bar\">\n                        <Tree :data=\"dataDep\" :load-data=\"loadData\" @on-select-change=\"selectTree\" :multiple=\"multiple\"></Tree>\n                        <Spin size=\"large\" fix v-if=\"depLoading\"></Spin>\n                    </div>\n                </div>\n            </Poptip>\n        </div>\n    </div>\n    </template>\n    \n    <script>\n    import {\n        initDepartment,\n        loadDepartment,\n        searchDepartment\n    } from \"@/api/index\";\n    export default {\n        name: \"departmentTreeChoose\",\n        props: {\n            multiple: {\n                type: Boolean,\n                default: false\n            },\n            clearable: {\n                type: Boolean,\n                default: true\n            },\n            placeholder: {\n                type: String,\n                default: \"Click to select a department\"\n            }\n        },\n        data() {\n            return {\n                depLoading: false,\n                departmentTitle: \"\",\n                searchKey: \"\",\n                dataDep: [],\n                selectDep: [],\n                departmentId: []\n            };\n        },\n        methods: {\n            initDepartmentData() {\n                initDepartment().then(res => {\n                    if (res.success) {\n                        res.result.forEach(function (e) {\n                            if (e.isParent) {\n                                e.loading = false;\n                                e.children = [];\n                            }\n                            if (e.status == -1) {\n                                e.title = \"[Disabled] \" + e.title;\n                                e.disabled = true;\n                            }\n                        });\n                        this.dataDep = res.result;\n                    }\n                });\n            },\n            loadData(item, callback) {\n                loadDepartment({\n                    parentId: item.id\n                }).then(res => {\n                    if (res.success) {\n                        res.result.forEach(function (e) {\n                            if (e.isParent) {\n                                e.loading = false;\n                                e.children = [];\n                            }\n                            if (e.status == -1) {\n                                e.title = \"[Disabled] \" + e.title;\n                                e.disabled = true;\n                            }\n                        });\n                        callback(res.result);\n                    }\n                });\n            },\n            searchDep() {\n                // Search for departments\n                if (this.searchKey) {\n                    this.depLoading = true;\n                    searchDepartment({\n                        title: this.searchKey\n                    }).then(res => {\n                        this.depLoading = false;\n                        if (res.success) {\n                            res.result.forEach(function (e) {\n                                if (e.status == -1) {\n                                    e.title = \"[Disabled] \" + e.title;\n                                    e.disabled = true;\n                                }\n                            });\n                            this.dataDep = res.result;\n                        }\n                    });\n                } else {\n                    this.initDepartmentData();\n                }\n            },\n            selectTree(v) {\n                let ids = [],\n                    title = \"\";\n                v.forEach(e => {\n                    ids.push(e.id);\n                    if (title == \"\") {\n                        title = e.title;\n                    } else {\n                        title = title + \"、\" + e.title;\n                    }\n                });\n                this.departmentId = ids;\n                this.departmentTitle = title;\n                if (this.multiple) {\n                    this.$emit(\"on-change\", this.departmentId);\n                } else {\n                    this.$emit(\"on-change\", this.departmentId[0]);\n                }\n            },\n            clearSelect() {\n                this.departmentId = [];\n                this.departmentTitle = \"\";\n                this.initDepartmentData();\n                if (this.multiple) {\n                    this.$emit(\"on-change\", []);\n                } else {\n                    this.$emit(\"on-change\", \"\");\n                }\n                this.$emit(\"on-clear\");\n            },\n            setData(ids, title) {\n                this.departmentTitle = title;\n                if (this.multiple) {\n                    this.departmentId = ids;\n                } else {\n                    this.departmentId = [];\n                    this.departmentId.push(ids);\n                }\n                this.$emit(\"on-change\", this.departmentId);\n            }\n        },\n        mounted() {\n            this.initDepartmentData();\n        }\n    };\n    </script>\n    \n    <style lang=\"less\">\n    .dep-tree-bar {\n        position: relative;\n        min-height: 80px;\n        max-height: 500px;\n        overflow: auto;\n        margin-top: 5px;\n    }\n    \n    .dep-tree-bar::-webkit-scrollbar {\n        width: 6px;\n        height: 6px;\n    }\n    \n    .dep-tree-bar::-webkit-scrollbar-thumb {\n        border-radius: 4px;\n        -webkit-box-shadow: inset 0 0 2px #d1d1d1;\n        background: #e4e4e4;\n    }\n    </style>\n    "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}