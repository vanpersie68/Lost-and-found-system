{"ast":null,"code":"import { getDictDataByType } from \"@/api/index\";\nexport default {\n  name: \"dict\",\n  props: {\n    value: \"\",\n    dict: String,\n    placeholder: {\n      type: String,\n      default: \"请选择\"\n    },\n    placement: {\n      type: String,\n      default: \"bottom-start\"\n    },\n    size: String,\n    multiple: {\n      type: Boolean,\n      default: false\n    },\n    disabled: {\n      type: Boolean,\n      default: false\n    },\n    filterable: {\n      type: Boolean,\n      default: false\n    },\n    transfer: {\n      type: Boolean,\n      default: false\n    },\n    transferClassName: String,\n    prefix: String,\n    maxTagCount: Number,\n    maxTagPlaceholder: Function,\n    clearable: {\n      type: Boolean,\n      default: true\n    }\n  },\n  data() {\n    return {\n      currentValue: this.value,\n      dictData: [],\n      loading: false\n    };\n  },\n  methods: {\n    getData(v) {\n      this.loading = true;\n      getDictDataByType(v).then(res => {\n        this.loading = false;\n        if (res.success) {\n          this.dictData = res.result;\n        }\n      });\n    },\n    handleChange(v) {\n      this.$emit(\"input\", v);\n      this.$emit(\"on-change\", v);\n    },\n    handleQueryChange(v) {\n      this.$emit(\"on-query-change\", v);\n    },\n    handleClear() {\n      this.$emit(\"on-clear\", \"\");\n    },\n    handleOpenChange(v) {\n      this.$emit(\"on-open-change\", v);\n    },\n    handleSelect(v) {\n      this.$emit(\"on-select\", v);\n    },\n    setCurrentValue(value) {\n      if (value === this.currentValue) {\n        return;\n      }\n      this.currentValue = value;\n      this.$emit(\"on-change\", this.currentValue);\n    }\n  },\n  watch: {\n    value(val) {\n      this.setCurrentValue(val);\n    },\n    dict(val) {\n      this.getData(val);\n    }\n  },\n  mounted() {\n    this.getData(this.dict);\n  }\n};","map":{"version":3,"names":["getDictDataByType","name","props","value","dict","String","placeholder","type","default","placement","size","multiple","Boolean","disabled","filterable","transfer","transferClassName","prefix","maxTagCount","Number","maxTagPlaceholder","Function","clearable","data","currentValue","dictData","loading","methods","getData","v","then","res","success","result","handleChange","$emit","handleQueryChange","handleClear","handleOpenChange","handleSelect","setCurrentValue","watch","val","mounted"],"sources":["src/views/template/dict.vue"],"sourcesContent":["<template>\n<div>\n    <Select v-model=\"currentValue\" :size=\"size\" :loading=\"loading\" :placeholder=\"placeholder\" :multiple=\"multiple\" :disabled=\"disabled\" :filterable=\"filterable\" :transfer=\"transfer\" :clearable=\"clearable\" :placement=\"placement\" :transfer-class-name=\"transferClassName\" :prefix=\"prefix\" :max-tag-count=\"maxTagCount\" :max-tag-placeholder=\"maxTagPlaceholder\" @on-change=\"handleChange\" @on-query-change=\"handleQueryChange\" @on-clear=\"handleClear\" @on-open-change=\"handleOpenChange\" @on-select=\"handleSelect\">\n        <Option v-for=\"(item, i) in dictData\" :key=\"i\" :value=\"item.value\">{{\n        item.title\n      }}</Option>\n    </Select>\n</div>\n</template>\n\n<script>\nimport {\n    getDictDataByType\n} from \"@/api/index\";\nexport default {\n    name: \"dict\",\n    props: {\n        value: \"\",\n        dict: String,\n        placeholder: {\n            type: String,\n            default: \"请选择\",\n        },\n        placement: {\n            type: String,\n            default: \"bottom-start\",\n        },\n        size: String,\n        multiple: {\n            type: Boolean,\n            default: false,\n        },\n        disabled: {\n            type: Boolean,\n            default: false,\n        },\n        filterable: {\n            type: Boolean,\n            default: false,\n        },\n        transfer: {\n            type: Boolean,\n            default: false,\n        },\n        transferClassName: String,\n        prefix: String,\n        maxTagCount: Number,\n        maxTagPlaceholder: Function,\n        clearable: {\n            type: Boolean,\n            default: true,\n        },\n    },\n    data() {\n        return {\n            currentValue: this.value,\n            dictData: [],\n            loading: false,\n        };\n    },\n    methods: {\n        getData(v) {\n            this.loading = true;\n            getDictDataByType(v).then((res) => {\n                this.loading = false;\n                if (res.success) {\n                    this.dictData = res.result;\n                }\n            });\n        },\n        handleChange(v) {\n            this.$emit(\"input\", v);\n            this.$emit(\"on-change\", v);\n        },\n        handleQueryChange(v) {\n            this.$emit(\"on-query-change\", v);\n        },\n        handleClear() {\n            this.$emit(\"on-clear\", \"\");\n        },\n        handleOpenChange(v) {\n            this.$emit(\"on-open-change\", v);\n        },\n        handleSelect(v) {\n            this.$emit(\"on-select\", v);\n        },\n        setCurrentValue(value) {\n            if (value === this.currentValue) {\n                return;\n            }\n            this.currentValue = value;\n            this.$emit(\"on-change\", this.currentValue);\n        },\n    },\n    watch: {\n        value(val) {\n            this.setCurrentValue(val);\n        },\n        dict(val) {\n            this.getData(val);\n        },\n    },\n    mounted() {\n        this.getData(this.dict);\n    },\n};\n</script>\n"],"mappings":"AAWA,SACAA,iBAAA,QACA;AACA;EACAC,IAAA;EACAC,KAAA;IACAC,KAAA;IACAC,IAAA,EAAAC,MAAA;IACAC,WAAA;MACAC,IAAA,EAAAF,MAAA;MACAG,OAAA;IACA;IACAC,SAAA;MACAF,IAAA,EAAAF,MAAA;MACAG,OAAA;IACA;IACAE,IAAA,EAAAL,MAAA;IACAM,QAAA;MACAJ,IAAA,EAAAK,OAAA;MACAJ,OAAA;IACA;IACAK,QAAA;MACAN,IAAA,EAAAK,OAAA;MACAJ,OAAA;IACA;IACAM,UAAA;MACAP,IAAA,EAAAK,OAAA;MACAJ,OAAA;IACA;IACAO,QAAA;MACAR,IAAA,EAAAK,OAAA;MACAJ,OAAA;IACA;IACAQ,iBAAA,EAAAX,MAAA;IACAY,MAAA,EAAAZ,MAAA;IACAa,WAAA,EAAAC,MAAA;IACAC,iBAAA,EAAAC,QAAA;IACAC,SAAA;MACAf,IAAA,EAAAK,OAAA;MACAJ,OAAA;IACA;EACA;EACAe,KAAA;IACA;MACAC,YAAA,OAAArB,KAAA;MACAsB,QAAA;MACAC,OAAA;IACA;EACA;EACAC,OAAA;IACAC,QAAAC,CAAA;MACA,KAAAH,OAAA;MACA1B,iBAAA,CAAA6B,CAAA,EAAAC,IAAA,CAAAC,GAAA;QACA,KAAAL,OAAA;QACA,IAAAK,GAAA,CAAAC,OAAA;UACA,KAAAP,QAAA,GAAAM,GAAA,CAAAE,MAAA;QACA;MACA;IACA;IACAC,aAAAL,CAAA;MACA,KAAAM,KAAA,UAAAN,CAAA;MACA,KAAAM,KAAA,cAAAN,CAAA;IACA;IACAO,kBAAAP,CAAA;MACA,KAAAM,KAAA,oBAAAN,CAAA;IACA;IACAQ,YAAA;MACA,KAAAF,KAAA;IACA;IACAG,iBAAAT,CAAA;MACA,KAAAM,KAAA,mBAAAN,CAAA;IACA;IACAU,aAAAV,CAAA;MACA,KAAAM,KAAA,cAAAN,CAAA;IACA;IACAW,gBAAArC,KAAA;MACA,IAAAA,KAAA,UAAAqB,YAAA;QACA;MACA;MACA,KAAAA,YAAA,GAAArB,KAAA;MACA,KAAAgC,KAAA,mBAAAX,YAAA;IACA;EACA;EACAiB,KAAA;IACAtC,MAAAuC,GAAA;MACA,KAAAF,eAAA,CAAAE,GAAA;IACA;IACAtC,KAAAsC,GAAA;MACA,KAAAd,OAAA,CAAAc,GAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAf,OAAA,MAAAxB,IAAA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}